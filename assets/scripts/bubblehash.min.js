(function(exports){var util=util||{};util.inherits=function(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})};util.args=function(args){return Array.prototype.slice.call(args)};util.lessThan=function(h_1,h_2){var i;for(i=h_1.length-1;i>=0;i-=1){if(h_1[i]<h_2[i]){return true}else if(h_2[i]<h_1[i]){return false}}return false};util.equalTo=function(h_1,h_2){var i;for(i=h_1.length-1;i>=0;i-=1){if(h_1[i]!==h_2[i])return false}return true};util.hash=function hash(key,seed){var h,i;h=murmurHash3.x86.hash128(key,seed).match(/([a-f0-9]{8})([a-f0-9]{8})([a-f0-9]{8})([a-f0-9]{8})/).slice(1,5);for(i=0;i<4;i+=1){h[i]=parseInt(h[i],16)}return h};util.logMinus=function(h_1,h_2){var a=[],buffer="",carry=0,sub=0,i,enc=0,encL=0,hex,e=0;if(util.lessThan(h_1,h_2)){sub=h_1;h_1=h_2;h_2=sub}for(i=0;i<h_1.length;i+=1){a[i]=h_1[i]-h_2[i]}for(i=0;i<h_1.length;i+=1){a[i]+=carry;if(a[i]<0){a[i]+=4294967296;if(a.slice(i+1,a.length).some(function(e){return e!==0})){carry=-1}else{carry=0}}else{carry=0}}for(i=a.length-1;i>=0;i-=1){if(a[i]>0||buffer.length>0){hex=buffer.length?("00000000"+a[i]).toString(16).slice(-8):a[i].toString(16);buffer=(buffer+hex).slice(0,8);enc=enc||i;encL=encL||buffer.length}if(buffer.length>=8||i===0){e=Math.round(32*enc*(Math.LN2/Math.LN10));break}}sub=0;buffer=buffer.length?buffer:"0";buffer=parseInt(buffer,16).toString();buffer=buffer[0]+"."+buffer.slice(1);sub=Number(""+buffer+"e"+e);return Math.floor(Math.log(sub||1)/Math.LN2)||0};util.addExp=function addExp(key,exponent){exponent=exponent%128;var result=key.concat(),index=Math.floor(exponent/32),carry;result[index]+=1<<exponent%32;carry=0;while(index<key.length){result[index]+=carry;carry=0;if(result[index]>4294967295){result[index]-=4294967296;carry=1}index+=1}return result};util.hashHex=function(x){var s="",i;for(i=0;i<x.length;i+=1){s+=x[i].toString(16)}return s};util.describe=function __ox_describe(){var typeDescription=/([A-Z][a-z]+)\]$/i,nullType="[object Null]";return function ox_describe(x){var type;if(x===null){type=nullType}else if(x&&x.constructor.prototype.type){type=x.constructor.prototype.type}else{type=Object.prototype.toString.call(x)}return type.match(typeDescription)[1].toLowerCase()}}();util.interpolate=function __ox_interpolate(){var r=/#\{([^\{\}]+)\}/g;function stringify(a){var b=String(a);return util.describe(a)==="regexp"?b.slice(1,-1):b}return function ox_interpolate(a,b){var aType=util.describe(a),aString=stringify(a);function ox_interpolate__(b){var z=aString.replace(r,function(c,d){var e=b[d];return e!==void 0?stringify(e):""});return aType==="regexp"?new RegExp(z):z}return b?ox_interpolate__(b):ox_interpolate__}}();var messages={findSuccessor:{message:"Finding successor of #{node}.",node:util.hashHex},foundSuccessor:{message:"The successor of #{node} is #{successor}.",node:util.hashHex,successor:util.hashHex},onFindSuccessor:{message:"The peer #{requestor} is requesting the successor of #{node}.",node:util.hashHex,requestor:util.hashHex},stabilize:{message:"Running the stabilization routine."},buildFingers:{message:"Running the buildFingers routine."},findPredecessor:{message:"Finding predecessor of #{node}",node:util.hashHex},newSuccessor:{message:"Found a new successor #{successor} for #{node}",node:util.hashHex,successor:util.hashHex},notify:{message:"Notifying #{successor} to set predecessor to #{node}",node:util.hashHex,successor:util.hashHex}};function EventEmitter(){this._events={}}var isArray=Array.isArray;EventEmitter.prototype.addListener=function(type,listener,scope,once){if("function"!==typeof listener){throw new Error("addListener only takes instances of Function")}this.emit("newListener",type,typeof listener.listener==="function"?listener.listener:listener);if(!this._events[type]){this._events[type]=listener}else if(isArray(this._events[type])){this._events[type].push(listener)}else{this._events[type]=[this._events[type],listener]}return this};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.once=function(type,listener,scope){if("function"!==typeof listener){throw new Error(".once only takes instances of Function")}var self=this;function g(){self.removeListener(type,g);listener.apply(this,arguments)}g.listener=listener;self.on(type,g);return this};EventEmitter.prototype.removeListener=function(type,listener,scope){if("function"!==typeof listener){throw new Error("removeListener only takes instances of Function")}if(!this._events[type])return this;var list=this._events[type];if(isArray(list)){var position=-1;for(var i=0,length=list.length;i<length;i++){if(list[i]===listener||list[i].listener&&list[i].listener===listener){position=i;break}}if(position<0)return this;list.splice(position,1);if(list.length==0)delete this._events[type]}else if(list===listener||list.listener&&list.listener===listener){delete this._events[type]}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.removeAllListeners=function(type){if(arguments.length===0){this._events={};return this}if(type&&this._events&&this._events[type])this._events[type]=null;return this};EventEmitter.prototype.listeners=function(type){if(!this._events[type])this._events[type]=[];if(!isArray(this._events[type])){this._events[type]=[this._events[type]]}return this._events[type]};EventEmitter.prototype.emit=function(type){var type=arguments[0];var handler=this._events[type];if(!handler)return false;if(typeof handler=="function"){switch(arguments.length){case 1:handler.call(this);break;case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;default:var l=arguments.length;var args=new Array(l-1);for(var i=1;i<l;i++)args[i-1]=arguments[i];handler.apply(this,args)}return true}else if(isArray(handler)){var l=arguments.length;var args=new Array(l-1);for(var i=1;i<l;i++)args[i-1]=arguments[i];var listeners=handler.slice();for(var i=0,l=listeners.length;i<l;i++){listeners[i].apply(this,args)}return true}else{return false}};function BubbleHash(id,options){EventEmitter.call(this);if(arguments.length===1){options=id;id=void 0}options=options||{};options.interval=options.interval||{};var self=this;this.peer=new Peer(id,options.peer);this.self=null;this.predecessor=null;this.successor=null;this.fingers=[];this.successorList=[];this.processes={};this.options=options;this.peer.on("connection",function(dataConnection){self.bindDataConnection(dataConnection);dataConnection.hash=util.hash(dataConnection.peer)});this.peer.on("error",function(){var peer,i,dataConnection;for(peer in this.connections){this.connections[peer]=this.connections[peer].filter(function(dc){if(dc.open===false){dc.emit("error");dc.close()}return dc.open});if(this.connections[peer].length===0){delete this.connections[peer]}}if(!bubblehash.fingers.some(function(f){return f.open})&&(!self.successor||self.successor.open===false)&&(!self.predecessor||self.predecessor.open===false)){self.emit("empty")}});this.peer.once("open",function(id){self.self=function(){function Ouroboros(){EventEmitter.call(this);this.peer=id;this.hash=util.hash(id);self.bindDataConnection(this)}util.inherits(Ouroboros,EventEmitter);Ouroboros.prototype.send=function send(data){this.emit("data",data)};return new Ouroboros}();self.fixFingers(options.interval.fixFingers||10);self.stabilize(options.interval.stabilize||10);self.checkPredecessor(options.interval.checkPredecessor||10);self.fixSuccessorList(options.interval.fixSuccessorList||10);self.fixSuccessor(options.interval.fixSuccessor||10)})}util.inherits(BubbleHash,EventEmitter);BubbleHash.prototype.types={NOTIFY:0,FIND_SUCCESSOR:1,FOUND_SUCCESSOR:2,FIND_PREDECESSOR:3,FOUND_PREDECESSOR:4,GET_SUCCESSOR_LIST:5,GOT_SUCCESSOR_LIST:6,MESSAGE:7};BubbleHash.prototype.connect=function connect(id,options){var finger;if(this.successor&&id===this.successor.peer){return this.successor}else if(this.predecessor&&id===this.predecessor.peer){return this.predecessor}else if(this.fingers.some(function(f){if(f.peer===id){finger=f;return true}})){return finger}else{var dataConnection=this.peer.connect(id,options);dataConnection.hash=util.hash(id);this.bindDataConnection(dataConnection);return dataConnection}};BubbleHash.prototype.join=function join(id,options){var dataConnection=this.connect(id,options),self=this;this.predecessor=null;dataConnection.once("open",function(){self.log("findSuccessor",{node:dataConnection.hash});dataConnection.send({type:self.types.FIND_SUCCESSOR,hash:self.self.hash,peer:self.self.peer,empty:true});dataConnection.once("dataFoundSuccessor",function(dataConnection,data){self.log("foundSuccessor",{node:dataConnection.hash,successor:data.hash});var successor=self.connect(data.peer);successor.once("open",function(){self.successor=successor;self.buildFingers(successor)})})});return dataConnection};BubbleHash.prototype.bindDataConnection=function bindDataConnection(dataConnection){var self=this;dataConnection.on("data",function(data){switch(data.type){case self.types.NOTIFY:this.emit("dataNotify",dataConnection,data);break;case self.types.FIND_SUCCESSOR:this.emit("dataFindSuccessor",dataConnection,data);break;case self.types.FOUND_SUCCESSOR:this.emit("dataFoundSuccessor",dataConnection,data);break;case self.types.FIND_PREDECESSOR:this.emit("dataFindPredecessor",dataConnection,data);break;case self.types.FOUND_PREDECESSOR:this.emit("dataFoundPredecessor",dataConnection,data);break;case self.types.GET_SUCCESSOR_LIST:this.emit("dataGetSuccessorList",dataConnection,data);break;case self.types.GOT_SUCCESSOR_LIST:this.emit("dataGotSuccessorList",dataConnection,data);break;case self.types.MESSAGE:self.emit("message",data.message);break;default:this.emit("error",new Error("Unrecognized message type."));break}});dataConnection.on("dataNotify",function(dataConnection,data){self.onNotify(dataConnection,data)});dataConnection.on("dataFindSuccessor",function(dataConnection,data){self.onFindSuccessor(dataConnection,data)});dataConnection.on("dataFindPredecessor",function(dataConnection,data){self.onFindPredecessor(dataConnection,data)});dataConnection.on("dataGetSuccessorList",function(dataConnection,data){self.onGetSuccessorList(dataConnection,data)});dataConnection.on("dataMessage",function(dataConnection,data){self.onMessage(dataConnection,data)})};BubbleHash.prototype.log=function log(message,obj){var message,key;if(messages[message]!==void 0){message=messages[message];for(key in obj){if(message[key]!==void 0){obj[key]=message[key](obj[key])}}message=util.interpolate(message.message);message=obj?message(obj):message()}if(/Error/.test(Object.prototype.toString.call(message))){console.error(message)}else if(this.options.log===true){console.log(message)}};BubbleHash.prototype.onNotify=function onNotify(dataChannel,data){var self=this,predecessor;if(this.predecessor===null||util.lessThan(this.predecessor.hash,data.hash)&&util.lessThan(data.hash,this.self.hash)){predecessor=this.connect(data.peer);predecessor.once("open",function(){self.predecessor=predecessor})}};BubbleHash.prototype.onFindSuccessor=function onFindSuccessor(dataConnection1,data1){var self=this,closestPrecedingNode;this.log("onFindSuccessor",{requestor:dataConnection1.hash,node:data1.hash});if(this.successor&&util.lessThan(this.self.hash,data1.hash)&&(util.lessThan(data1.hash,this.successor.hash)||util.equalTo(data1.hash,this.successor.hash))){self.log("foundSuccessor",{node:data1.hash,successor:this.successor.hash});dataConnection1.send({type:this.types.FOUND_SUCCESSOR,peer:this.successor.peer,hash:this.successor.hash})}else{closestPrecedingNode=this.closestPrecedingNode(data1.hash);if(closestPrecedingNode===this.self){self.log("foundSuccessor",{node:data1.hash,successor:this.self.hash});if(data1.empty===true&&this.fingers.length===0&&this.successor===null&&this.predecessor===null){this.successor=dataConnection1}dataConnection1.send({type:this.types.FOUND_SUCCESSOR,peer:self.self.peer,hash:self.self.hash})}else{closestPrecedingNode.send({type:this.types.FIND_SUCCESSOR,hash:data1.hash,peer:data1.peer});closestPrecedingNode.once("dataFoundSuccessor",function(dataConnection2,data2){self.log("foundSuccessor",{node:data1.hash,successor:data2.hash});dataConnection1.send({type:self.types.FOUND_SUCCESSOR,peer:data2.peer,hash:data2.hash})})}}};BubbleHash.prototype.onFindPredecessor=function onFindPredecessor(dataConnection,data){if(this.predecessor){dataConnection.send({type:this.types.FOUND_PREDECESSOR,peer:this.predecessor.peer,hash:this.predecessor.hash})}};BubbleHash.prototype.onGetSuccessorList=function onGetSuccessorList(dataConnection,data){dataConnection.send({type:this.types.GOT_SUCCESSOR_LIST,list:this.successorList,peer:this.self.peer,hash:this.self.hash})};BubbleHash.prototype.closestPrecedingNode=function closestPrecedingNode(x){var i,finger;this.log("Looking for closest preceding node of "+util.hashHex(x)+".");for(i=this.fingers.length-1;i>=1;i-=1){finger=this.fingers[i];if(finger){if(util.lessThan(this.self.hash,finger.hash)&&util.lessThan(finger.hash,x)){return finger}}}return this.self};BubbleHash.prototype.buildFingers=function buildFingers(s){var self=this,i_0,i;if(this.successor){i_0=util.logMinus(this.successor.hash,this.self.hash)+1;this.log("buildFingers");for(i=i_0;i<128-1;i+=1){s.send({type:this.types.FIND_SUCCESSOR,hash:util.addExp(this.self.hash,i),peer:self.self.peer});(function(i){s.once("dataFoundSuccessor",function(dataConnection,data){self.fingers[i]=self.connect(data.peer)})})(i)}}};BubbleHash.prototype.fixFingers=function fixFingers(interval){var self;if(!this.processes.fixFingers){self=this;this.processes.fixFingers=setInterval(function(){if(self.successor!==self.self){self.buildFingers(self.self)}},interval*1e3)}};BubbleHash.prototype.stabilize=function stabilize(interval){var self;this.log("stabilize");if(!this.processes.stabilize){self=this;this.processes.stabilize=setInterval(function(){var x;self.checkPredecessor();if(self.successor){self.log("findPredecessor",{node:self.self.hash});self.successor.send({type:self.types.FIND_PREDECESSOR,hash:self.self.hash,peer:self.self.peer});self.successor.once("dataFoundPredecessor",function(dataConnection1,data1){var successor;if(util.lessThan(self.self.hash,data1.hash)&&util.lessThan(data1.hash,self.successor.hash)){self.log("newSuccessor",{node:self.self.hash,successor:data1.hash});successor=self.connect(data1.peer);successor.once("open",function(dataConnection2,data2){self.successor=successor;self.log("notify",{node:self.self.hash,successor:successor.hash});successor.send({type:self.types.NOTIFY,peer:self.self.peer,hash:self.self.hash})})}});self.log("notify",{node:self.self.hash,successor:self.successor.hash});self.successor.send({type:self.types.NOTIFY,peer:self.self.peer,hash:self.self.hash})}},interval*1e3)}};BubbleHash.prototype.checkPredecessor=function checkPredecessor(interval){var self;if(!this.processes.checkPredecessor){self=this;this.processes.checkPredecessor=setInterval(function(){if(this.predecessor&&this.predecessor.open===false){this.predecssor=null}},interval*1e3)}};BubbleHash.prototype.fixSuccessorList=function fixSuccessorList(interval){var self;if(!this.processes.fixSuccessorList){self=this;this.processes.fixSuccessorList=setInterval(function(){if(self.successor){self.successor.send({type:self.types.GET_SUCCESSOR_LIST,peer:self.self.peer,hash:self.self.hash});self.successor.once("dataGotSuccessorList",function(dataConnection,data){self.successorList=[[self.successor.peer,self.successor.hash]].concat(data.list.slice(-1))})}},interval*1e3)}};BubbleHash.prototype.fixSuccessor=function(interval){var self=this;if(!this.processes.fixSuccessor){this.processes.fixSuccessor=setInterval(function(){var successor,smallest,i;if(self.successor===null||self.successor.open===false){if(self.successorList.length>0){smallest=self.successorList[0];for(i=1;i<self.successorList.length;i+=1){successor=self.successorList[i];if(util.lessThan(successor[1],smallest)){smallest=successor}}successor=self.connect(smallest[0]);successor.once("open",function(){self.successor=successor})}}},interval*1e3)}};BubbleHash.prototype.destroy=function destroy(){var key;this.peer.destroy();for(key in this.processes){clearInterval(this.processes[key])}};exports.RTCSessionDescription=window.mozRTCSessionDescription||window.RTCSessionDescription;exports.RTCPeerConnection=window.mozRTCPeerConnection||window.webkitRTCPeerConnection||window.RTCPeerConnection;exports.RTCIceCandidate=window.mozRTCIceCandidate||window.RTCIceCandidate;exports.BubbleHash=BubbleHash})(this);