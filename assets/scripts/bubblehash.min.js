(function(exports){var util={};util.inherits=function(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})};util.args=function(args){return Array.prototype.slice.call(args)};util.lessThan=function(h_1,h_2){var i;for(i=h_1.length-1;i>=0;i-=1){if(h_1[i]<h_2[i])return true}return false};util.equalTo=function(h_1,h_2){var i;for(i=h_1.length-1;i>=0;i-=1){if(h_1[i]==h_2[i])return true}return false};util.hash=function hash(key,seed){var h,i;h=murmurHash3.x86.hash128(key,seed).match(/([a-f0-9]{8})([a-f0-9]{8})([a-f0-9]{8})([a-f0-9]{8})/).slice(1,5);for(i=0;i<4;i+=1){h[i]=parseInt(h[i],16)}return h};util.logMinus=function(h_1,h_2){var a=[],buffer="",carry=0,sub=0,i,enc=0,encL=0,hex,e=0;if(util.lessThan(h_1,h_2)){sub=h_1;h_1=h_2;h_2=sub}sub=0;for(i=0;i<h_1.length;i+=1){sub=Math.abs(h_1[i])-Math.abs(h_2[i])+carry;if(sub<0&&i<h_1.length-1){sub=i<h_1.length-1&&a[i+1]>0?4294967296-sub:0;carry=-1}else{carry=0}a[i]=sub}for(i=a.length-1;i>=0;i-=1){if(a[i]>0||buffer.length>0){hex=buffer.length?("00000000"+a[i]).toString(16).slice(-8):a[i].toString(16);buffer=(buffer+hex).slice(0,8);enc=enc||i;encL=encL||buffer.length}if(buffer.length>=8||i===0){e=Math.floor((32*enc+4*encL)*Math.LN2/Math.LN10);break}}sub=0;buffer=buffer.length?buffer:"0";buffer=parseInt(buffer,16).toString();buffer=buffer[0]+"."+buffer.slice(1);sub=Number(""+buffer+"e"+e);return Math.round(Math.log(sub||1)/Math.LN2)||0};util.addExp=function addExp(key,exponent){exponent=exponent%128;var result=key.concat(),index=Math.floor(exponent/32),carry;result[index]+=1<<exponent%32;carry=0;while(index<key.length){result[index]+=carry;carry=0;if(result[index]>4294967295){result[index]-=4294967296;carry=1}index+=1}return result};function BubbleHash(id,options){if(arguments.length===1){options=id;id=void 0}options=options||{};options.interval=options.interval||{};var self=this;this.peer=new Peer(id,options.peer);this.self=null;this.predecessor=null;this.successor=this.self;this.fingers=[];this.successorList=[];this.processes={};this.options=options;this.peer.on("connection",function(dataConnection){self.bindDataConnection(dataConnection);dataConnection.hash=util.hash(dataConnection.peer)});this.peer.on("open",function(id){self.self=self.join(id);self.self.hash=util.hash(id);self.successor=self.self;self.fixFingers(options.interval.fixFingers||10)})}BubbleHash.prototype.types={NOTIFY:0,FIND_SUCCESSOR:1,FOUND_SUCCESSOR:2,FIND_PREDECESSOR:3,FOUND_PREDECESSOR:4,GET_SUCCESSOR_LIST:5,GOT_SUCCESSOR_LIST:6,MESSAGE:7};BubbleHash.prototype.connect=function connect(id,options){var dataConnection=this.peer.connect(id,options);dataConnection.hash=util.hash(id);this.bindDataConnection(dataConnection);return dataConnection};BubbleHash.prototype.join=function join(id,options){var dataConnection=this.connect(id,options),self=this;this.predecessor=null;dataConnection.once("open",function(){self.log("Finding successor of "+dataConnection.peer+".");dataConnection.send({type:self.types.FIND_SUCCESSOR,hash:self.self.hash,peer:self.self.peer});dataConnection.once("dataFoundSuccessor",function(dataConnection,data){self.log("The successor of "+dataConnection.peer+" is "+data.peer+".");self.successor=self.connect(data.peer);self.buildFingers(self.successor)})});return dataConnection};BubbleHash.prototype.bindDataConnection=function bindDataConnection(dataConnection){var self=this;dataConnection.on("data",function(data){console.log(data);switch(data.type){case self.types.NOTIFY:this.emit("dataNotify",dataConnection,data);break;case self.types.FIND_SUCCESSOR:this.emit("dataFindSuccessor",dataConnection,data);break;case self.types.FOUND_SUCCESSOR:this.emit("dataFoundSuccessor",dataConnection,data);break;case self.types.FIND_PREDECESSOR:this.emit("dataFindPredecessor",dataConnection,data);break;case self.types.FOUND_PREDECESSOR:this.emit("dataFoundPredecessor",dataConnection,data);break;case self.types.GET_SUCCESSOR_LIST:this.emit("dataGetSuccessorList",dataConnection,data);break;case self.types.GOT_SUCCESSOR_LIST:this.emit("dataGotSuccessorList",dataConnection,data);break;case self.types.MESSAGE:self.emit("dataMessage",data.message);break;default:this.emit("error",new Error("Unrecognized message type."));break}});dataConnection.on("dataNotify",function(dataConnection,data){self.onNotify(dataConnection,data)});dataConnection.on("dataFindSuccessor",function(dataConnection,data){self.onFindSuccessor(dataConnection,data)});dataConnection.on("dataFindPredecessor",function(dataConnection,data){self.onFindPredecessor(dataConnection,data)});dataConnection.on("dataGetSuccessorList",function(dataConnection,data){self.onGetSuccessorList(dataConnection,data)});dataConnection.on("dataMessage",function(dataConnection,data){self.onMessage(dataConnection,data)})};BubbleHash.prototype.log=function log(message){if(/Error/.test(Object.prototype.toString.call(message))){console.error(message)}else if(this.options.log===true){console.log(message)}};BubbleHash.prototype.onFindSuccessor=function onFindSuccessor(dataConnection,data){var self=this,successorHash=this.successor.hash,closestPrecedingNode,requestingPeer=data.peer;if(util.lessThan(this.self.hash,data.hash)&&(util.lessThan(data.hash,successorHash)||util.equalTo(data.hash,successorHash))){self.log("The successor of "+requestingPeer+" is "+this.successor.peer+".");dataConnection.send({type:this.types.FOUND_SUCCESSOR,peer:this.successor.peer,hash:this.successor.hash})}else{closestPrecedingNode=this.closestPrecedingNode(data.hash);this.log("Finding successor of "+closestPrecedingNode.peer+".");closestPrecedingNode.send({type:this.types.FIND_SUCCESSOR,hash:data.hash,peer:data.peer});closestPrecedingNode.once("dataFoundSuccessor",function(dataConnection,data){self.log("The successor of "+requestingPeer+" is "+data.peer+".");dataConnection.send({type:self.types.FOUND_SUCCESOR,peer:data.peer,hash:data.hash})})}};BubbleHash.prototype.closestPrecedingNode=function closestPrecedingNode(x){var i,finger;this.log("Looking for closest preceding node of "+x.join("")+".");for(i=128-1;i>=1;i-=1){finger=this.fingers[i];if(finger){if(util.lessThan(this.self.hash,finger.hash)&&util.lessThan(finger.hash,x)){return finger}}}return this.self};BubbleHash.prototype.buildFingers=function buildFingers(s){var self=this,i_0,i;i_0=util.logMinus(this.successor.hash,this.self.hash)+1;this.log("Refreshing finger table entries.");this.log("LogMinus = "+i_0);for(i=i_0;i<128-1;i+=1){s.send({type:this.types.FIND_SUCCESSOR,hash:util.addExp(this.self.hash,i),peer:self.self.peer});(function(i){s.once("dataFoundSuccessor",function(dataConnection,data){self.fingers[i]=self.connect(data.peer)})})(i)}};BubbleHash.prototype.fixFingers=function fixFingers(interval){var self;if(!this.processes.fixFingers){self=this;this.processes.fixFingers=setInterval(function(){self.buildFingers(self.self)},interval*1e3)}};BubbleHash.prototype.stabilization=function stabilization(interval){var self;this.log("Stabilizing...");if(!this.processes.stabilization){self=this;this.processes.stabilization=setInterval(function(){var x;self.checkPredecessor();self.successor.send({type:self.types.FIND_PREDECESSOR,hash:self.self.hash,peer:self.self.peer});self.successor.once("dataFoundPredecessor",function(dataConnection,data){if(util.lessThan(self.self.hash,data.hash)&&util.lessThan(data.hash,self.successor.hash)){self.successor=self.connect(data.peer)}});self.successor.once("open",function(dataChannel){dataChannel.send({type:self.types.NOTIFY,peer:self.self.peer,hash:self.self.hash})})},interval*1e3)}};exports.RTCSessionDescription=window.mozRTCSessionDescription||window.RTCSessionDescription;exports.RTCPeerConnection=window.mozRTCPeerConnection||window.webkitRTCPeerConnection||window.RTCPeerConnection;exports.RTCIceCandidate=window.mozRTCIceCandidate||window.RTCIceCandidate;exports.BubbleHash=BubbleHash})(this);