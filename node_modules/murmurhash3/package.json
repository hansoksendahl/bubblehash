{
  "name": "murmurhash3",
  "version": "0.2.3",
  "description": "Node binding of MurmurHash3",
  "repository": {
    "type": "git",
    "url": "https://github.com/hideo55/node-murmurhash3"
  },
  "bugs": {
    "url": "https://github.com/hideo55/node-murmurhash3/issues"
  },
  "homepage": "http://hideo55.github.com/node-murmurhash3/",
  "keywords": [
    "hash",
    "murmurhash"
  ],
  "author": {
    "name": "Hideaki Ohno",
    "email": "hide.o.j55@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "1.8.1"
  },
  "main": "./lib/murmurhash3.js",
  "engines": {
    "node": ">=0.6.13"
  },
  "scripts": {
    "test": "mocha -R spec test.js",
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "# murmurhash3\n\n  Node.js binding of [MurmurHash3](http://code.google.com/p/smhasher/wiki/MurmurHash3) C++ implementaion.\n\n [![Build Status](https://secure.travis-ci.org/hideo55/node-murmurhash3.png)](http://travis-ci.org/hideo55/node-murmurhash3)\n\n## Install\n\n    $ npm install murmurhash3\n    \nor\n\n    $ git clone https://github.com/hideo55/node-murmurhash3.git\n    $ npm install ./node-murmurhash3\n\n## Requirement\n\n### Node v0.4 and v0.6(v0.6.12 or prior)\n\nYou must use murmurhash3 0.0.6.\n\n### Node v0.6 (v0.6.13 or later), v0.8 and v0.10\n\nYou must use murmurhash3 0.0.8 or later.\nIt is strongly recommended to use latest version.\n\n## Usage\n\n    var mmh3 = require('murmurhash3');\n    mmh3.murmur32('key', function(err,hashValue){\n      if (err) throw err;\n      ...\n   \t});\n    mmh3.murmur128('key', function(err,hashValue){\n      if (err) throw err;\n      ...\n    });\n\n## Functions\n\n###Async intefeaces\n\n    murmur32(key [,seed], callback);    // return 32bit integer value\n    murmur32Hex(key [,seed], callback); // return 32bit hexadecimal string\n    murmur128(key [,seed], callback);   // return array that have 4 elements of 32bit integer\n    murmur128Hex(key [,seed], callback);// return 128bit hexadecimal string\n\n- 'seed' is optional argument. (unsigned integer)\n- The callback gets two arguments `(error, hashValue)`. \n\n###Sync interfaces\n\n    murmur32Sync(key [,seed]);    // return 32bit integer value\n    murmur32HexSync(key, [,seed]); // return 32bit hexadecimal string\n    murmur128Sync(key [,seed]);   // return array that have 4 elements of 32bit integer\n    murmur128HexSync(key [,seed]);// return 128bit hexadecimal string\n\n- 'seed' is optional argument. (unsigned integer)\n\n## Author\n\nHideaki Ohno  &lt;hide.o.j55{at}gmail.com&gt;\n\nMurmurHash3(C++ implementaion) by Austin Appleby\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 Hideaki Ohno &lt;hide.o.j55{at}gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "_id": "murmurhash3@0.2.3",
  "dist": {
    "shasum": "4f66d88c3541da8d65688ccf571a00f10b6d5c1c"
  },
  "_from": "murmurhash3@",
  "_resolved": "https://registry.npmjs.org/murmurhash3/-/murmurhash3-0.2.3.tgz"
}
